/* touch sensor left */
#define SENSOR_T_L IN_1
/* touch sensor right */
#define SENSOR_T_R IN_2
/* light sensor */
#define SENSOR_L IN_3
/* ultrasonic sensor */
#define SENSOR_US IN_4

/* engine left */
#define ENGINE_L OUT_A
/* engine right */
#define ENGINE_R OUT_B
/* both engines */
#define ENGINE_B OUT_AB

/* For the emergency dodge */
#define EMERGENCY_RANGE 20

/* The refine the precision, change theese */
#define L_DARK_THRESHOLD 20
#define L_WHITE_THRESHOLD 40

void sensors_setup() {
	SetSensorTouch(SENSOR_T_L);
	SetSensorTouch(SENSOR_T_R);
	SetSensorLight(SENSOR_L);
	SetSensorUltrasonic(SENSOR_US);

	/*SetSensorMode(SENSOR_L, IN_MODE_PCTFULLSCALE);
	ResetSensor(SENSOR_L);*/

}

/* Checks the obstacles sensors status :
returns 0 when no obstacle
returns 1 when the obstacle is in range from 20 to 255 cm
returns 2 when the obstacle triggered the touch sensors, or when is in range lower than 20 cm */
/* We assume that this function is called often enough in order not to calculate the average on all the sensors values */
/* In my opinion, the robot should behave the same way when the range is lower than 20 cm or when a touch sensor is activated,
to do an « emergency obstacle dodge. */
/* But, how do we know if the obstacle is on the right or on the left ? This should be to investigate */
int obstacle_sensors_status() {
	int a;

	/* Touch sensors, the important ones */
	a = Sensor(SENSOR_T_L) || Sensor(SENSOR_T_R);
	if(a) {
		return 2;
	}

	/* Ultrasonic sensor */
	a = SensorUS(SENSOR_US);
	if(a < EMERGENCY_RANGE) {
		return 2;
	} else if(a > 20 && a < 255) {
		return 1;
	}

	return 0;
}

/* Checks the light sensor:
returns 0 when everything is good,
returns 1 when in the starting area,
returns 2 when detecting the white line */
int light_sensor_status() {
	int a;

	a = Sensor(SENSOR_L);
	if(a < L_DARK_THRESHOLD) {
		return 1;
	} else if(a > L_WHITE_THRESHOLD) {
		return 2;
	}

	return 0;
}

task main() {
	sensors_setup();
	string str;
	int a;

	while(true) {
		/*a = obstacle_sensors_status();
		switch(a) {
			case 1:
				str = "Foreign obstacle!";
				break;

			case 2:
				str = "Close obstacle!";
				break;

			default:
				str = "Ok!";
				break;
		}*/

		a = light_sensor_status();
		switch(a) {
			case 1:
				str = "Starting area!";
				break;

			case 2:
				str = "White line!";
				break;

			default:
				str = "Ok!";
				break;
		}

		TextOut(0, LCD_LINE3, str, 0x001);/* 0x001 clears the screen */
		Wait(100);
	}
}
